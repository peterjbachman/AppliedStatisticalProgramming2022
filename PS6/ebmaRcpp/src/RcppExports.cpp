// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rCppEBMA
NumericMatrix rCppEBMA(NumericMatrix xMatrix, NumericVector yVector, NumericVector weights, double sd, int iterations);
RcppExport SEXP _ebmaRcpp_rCppEBMA(SEXP xMatrixSEXP, SEXP yVectorSEXP, SEXP weightsSEXP, SEXP sdSEXP, SEXP iterationsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type xMatrix(xMatrixSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type yVector(yVectorSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< double >::type sd(sdSEXP);
    Rcpp::traits::input_parameter< int >::type iterations(iterationsSEXP);
    rcpp_result_gen = Rcpp::wrap(rCppEBMA(xMatrix, yVector, weights, sd, iterations));
    return rcpp_result_gen;
END_RCPP
}
// wHat
NumericVector wHat(NumericMatrix z);
RcppExport SEXP _ebmaRcpp_wHat(SEXP zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type z(zSEXP);
    rcpp_result_gen = Rcpp::wrap(wHat(z));
    return rcpp_result_gen;
END_RCPP
}
// zHat
NumericMatrix zHat(NumericMatrix x, NumericVector y, NumericVector weights, double sd);
RcppExport SEXP _ebmaRcpp_zHat(SEXP xSEXP, SEXP ySEXP, SEXP weightsSEXP, SEXP sdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< double >::type sd(sdSEXP);
    rcpp_result_gen = Rcpp::wrap(zHat(x, y, weights, sd));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ebmaRcpp_rCppEBMA", (DL_FUNC) &_ebmaRcpp_rCppEBMA, 5},
    {"_ebmaRcpp_wHat", (DL_FUNC) &_ebmaRcpp_wHat, 1},
    {"_ebmaRcpp_zHat", (DL_FUNC) &_ebmaRcpp_zHat, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_ebmaRcpp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
